// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique // Clerk User ID
  entries   Entry[]
  upvotes   Upvote[]
  role      Role     @default(USER) // Add role field with default
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Entry {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text // Allow longer text
  tag         Tag
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  upvotes     Upvote[]

  @@index([createdAt])
  @@index([authorId])
}

model Upvote {
  id        String   @id @default(cuid())
  userId    String
  entryId   String
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  entry Entry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  @@unique([userId, entryId]) // User can only upvote an entry once
  @@index([userId])
  @@index([entryId])
}

enum Tag {
  PROGRAM
  EVENT
  TIPS_AND_TRICKS
}

// Add the Role enum
enum Role {
  USER
  ADMIN
}
